trigger:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'

pr:
  branches:
    include:
    - master
    - rel/*
  paths:
    exclude:
    - '**/*.md'

pool:
  vmImage: windows-2019

variables: 
  BuildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  
steps:
- task: DotNetCoreCLI@2  
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv
  displayName: Install NBGV tool

- script: nbgv cloud
  displayName: Set Version

- task: DotNetCoreInstaller@0
  inputs:
    version: '3.0.100-preview7-012588'

- task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: Refit/Refit.csproj
    arguments: -c $(BuildConfiguration)   
  displayName: Build
  
- task: DotNetCoreCLI@2
  inputs:
    command: pack
    packagesToPack: Refit/Refit.csproj
    configuration: $(BuildConfiguration)
    packDirectory: $(Build.ArtifactStagingDirectory)\artifacts
    nobuild: true
  displayName: Pack

- task: DotNetCoreCLI@2
  inputs:
    command: pack
    packagesToPack: Refit.HttpClientFactory/Refit.HttpClientFactory.csproj
    configuration: $(BuildConfiguration)
    packDirectory: $(Build.ArtifactStagingDirectory)\artifacts    
    verbosityPack: Minimal
  displayName: Pack Extensions

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: Refit.Tests/Refit.Tests.csproj
    arguments: -c $(BuildConfiguration) --settings $(System.DefaultWorkingDirectory)/CodeCoverage.runsettings --collect:"XPlat Code Coverage" -- RunConfiguration.DisableAppDomain=true
  displayName: Run Tests

- task: DotNetCoreCLI@2
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . dotnet-reportgenerator-globaltool
  displayName: Install ReportGenerator tool
  
- script: reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create reports
  
- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: $(Build.SourcesDirectory)/coverlet/reports/Cobertura.xml  

- task: PowerShell@2
  displayName: Authenticode Sign Packages
  inputs:
    filePath: build/Sign-Package.ps1
  env:
    SignClientUser: $(SignClientUser)
    SignClientSecret: $(SignClientSecret)
    ArtifactDirectory: $(Build.ArtifactStagingDirectory)\artifacts
  condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')), not(eq(variables['SignClientSecret'], '')), not(eq(variables['SignClientUser'], '')))

- task: PublishBuildArtifacts@1
  displayName: Publish Package Artifacts
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)\artifacts
    artifactType: container
    artifactName: Packages
